{"version":3,"file":"static/js/236.89dd94d3.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-WFX3T3Z6.mjs"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth.operations';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handlerSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Flex bg=\"gray.100\" justify=\"center\" pt={100} h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={500} h={380}>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          onSubmit={handlerSubmit}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl onSubmit={handleSubmit}>\n                  <FormLabel htmlFor=\"name\" fontSize=\"1.25rem\">\n                    Username\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    type=\"text\"\n                    name=\"name\"\n                    variant=\"filled\"\n                    fontSize=\"1.25rem\"\n                  />\n                </FormControl>{' '}\n                <FormControl onSubmit={handleSubmit}>\n                  <FormLabel htmlFor=\"email\" fontSize=\"1.25rem\">\n                    Email Address\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    type=\"email\"\n                    name=\"email\"\n                    variant=\"filled\"\n                    fontSize=\"1.25rem\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                <FormLabel htmlFor=\"password\" fontSize='1.25rem'>Password</FormLabel>\n                  <Field as={Input} \n                  type=\"password\"\n                  name=\"password\"\n                  fontSize='1.25rem'\n                  validate={(value) => {\n                    if (value.length <= 4) {\n                      return \"Password should be over 4 characters\";\n                    }\n                  }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Button type=\"submit\" colorScheme='telegram' w='full'>Register</Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { Flex, Spinner, Text } from '@chakra-ui/react';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  const { isLoadingAuth } = useAuth();\n\n  return (\n    <main>\n      <Helmet prioritizeSeoTags>\n        <title>Registration of a new phonebook user</title>\n        <meta\n          property=\"og:title\"\n          content=\"Registration of a new phonebook user\"\n        />\n      </Helmet>\n      {isLoadingAuth ? (\n        <Flex justify=\"center\" align=\"center\" gap={5} mt={30}>\n          <Spinner\n            thickness=\"6px\"\n            color=\"blue.500\"\n            emptyColor=\"gray.200\"\n            size=\"xl\"\n          />{' '}\n          <Text fontSize=\"30px\">User Registration...</Text>\n        </Flex>\n      ) : (\n        <RegisterForm />\n      )}\n    </main>\n  );\n}","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-error.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nvar FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!(field == null ? void 0 : field.isInvalid))\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nvar FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!(field == null ? void 0 : field.isInvalid))\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport {\n  useFormErrorStyles,\n  FormErrorMessage,\n  FormErrorIcon\n};\n"],"names":["RegisterForm","dispatch","useDispatch","bg","justify","pt","h","p","rounded","w","initialValues","name","email","password","onSubmit","values","resetForm","register","handleSubmit","errors","touched","spacing","align","htmlFor","fontSize","as","Input","type","variant","isInvalid","validate","value","length","colorScheme","Register","isLoadingAuth","useAuth","Helmet","prioritizeSeoTags","property","content","gap","mt","thickness","color","emptyColor","size","createContext","errorMessage","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","jsx","children","chakra","getErrorMessageProps","className","cx","__css","display","alignItems","text","displayName","_className","Icon","icon","fill","d"],"sourceRoot":""}