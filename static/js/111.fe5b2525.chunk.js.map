{"version":3,"file":"static/js/111.fe5b2525.chunk.js","mappings":"wTAcaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAAC,IAAD,CAAMC,GAAG,WAAYC,QAAQ,SAASC,GAAI,IAAKC,EAAE,QAAjD,UACE,SAAC,KAAD,CAAKH,GAAG,QAAQI,EAAG,EAAGC,QAAQ,KAAKC,EAAG,IAAKH,EAAG,IAA9C,UACE,SAAC,KAAD,CACEI,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SApBa,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UACrBJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SACfX,GACEe,EAAAA,EAAAA,IAAM,CACJL,MAAOA,EACPC,SAAUA,KAIdG,GACD,EAKK,SAOG,kBACC,2BACE,UAAC,IAAD,CAAQE,QAAS,EAAGC,MAAM,aAA1B,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWC,QAAQ,QAAQC,SAAS,UAApC,4BACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,QACLC,KAAK,QACLC,QAAQ,SACRL,SAAS,gBAGb,UAAC,KAAD,YACA,SAAC,IAAD,CAAWD,QAAQ,WAAWC,SAAS,UAAvC,uBACE,SAAC,KAAD,CAAOC,GAAIC,EAAAA,EACXC,KAAK,WACLC,KAAK,WACLJ,SAAS,gBAGX,SAAC,IAAD,CAAQG,KAAK,SAASG,YAAY,WAAWjB,EAAE,OAA/C,wBArBL,OA6BV,E,oBC/Dc,SAASkB,IACtB,IAAQC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,OACE,6BACE,UAACE,EAAA,EAAD,CAAQC,mBAAiB,EAAzB,WACE,sDACA,iBAAMC,SAAS,WAAWC,QAAQ,6BAEnCL,GACC,UAAC,IAAD,CAAMxB,QAAQ,SAASc,MAAM,SAASgB,GAAI,GAAIC,IAAK,EAAnD,WACE,SAAC,IAAD,CACEC,UAAU,MACVC,MAAM,WACNC,WAAW,WACXC,KAAK,OACJ,KACH,SAAC,IAAD,CAAMnB,SAAS,OAAf,wCAGF,SAACpB,EAAD,MAIP,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth.operations';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  // FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();  \n\n  const handleSubmit = (values, {resetForm}) => {\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })      \n    );\n\n    resetForm();\n  };\n\n  return (\n    <Flex bg=\"gray.100\"  justify=\"center\" pt={100} h=\"100vh\" >\n      <Box bg=\"white\" p={6} rounded=\"md\" w={500} h={290} >\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onSubmit={handleSubmit}\n        >\n          {() => (\n            <form >\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\" fontSize='1.25rem'>Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    type=\"email\"\n                    name=\"email\"\n                    variant=\"filled\"\n                    fontSize='1.25rem'\n                  />\n                </FormControl>\n                <FormControl >\n                <FormLabel htmlFor=\"password\" fontSize='1.25rem'>Password</FormLabel>\n                  <Field as={Input} \n                  type=\"password\"\n                  name=\"password\"\n                  fontSize='1.25rem'\n                  />\n                </FormControl>\n                <Button type=\"submit\" colorScheme='telegram' w='full' >Log In</Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { Flex, Spinner, Text } from '@chakra-ui/react';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet';\n\nexport default function Login() {\n  const { isLoadingAuth } = useAuth();\n\n  return (\n    <main>\n      <Helmet prioritizeSeoTags>\n        <title>Login to my phonebook</title>\n        <meta property=\"og:title\" content=\"Login to my phonebook\" />\n      </Helmet>\n      {isLoadingAuth ? (\n        <Flex justify=\"center\" align=\"center\" mt={30} gap={5}>\n          <Spinner\n            thickness=\"6px\"\n            color=\"blue.500\"\n            emptyColor=\"gray.200\"\n            size=\"xl\"\n          />{' '}\n          <Text fontSize=\"30px\">Authorization check...</Text>\n        </Flex>\n      ) : (\n        <LoginForm />\n      )}\n    </main>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","bg","justify","pt","h","p","rounded","w","initialValues","email","password","onSubmit","values","resetForm","logIn","spacing","align","htmlFor","fontSize","as","Input","type","name","variant","colorScheme","Login","isLoadingAuth","useAuth","Helmet","prioritizeSeoTags","property","content","mt","gap","thickness","color","emptyColor","size"],"sourceRoot":""}