{"version":3,"file":"static/js/236.9e55e4c8.chunk.js","mappings":"8SAcaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,SAAC,IAAD,CAAMC,GAAG,WAAWC,QAAQ,SAASC,GAAI,IAAKC,EAAE,QAAhD,UACE,SAAC,KAAD,CAAKH,GAAG,QAAQI,EAAG,EAAGC,QAAQ,KAAKC,EAAG,IAAKH,EAAG,IAA9C,UACE,SAAC,KAAD,CACEI,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAtBc,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAGvBC,EAA0BF,EAA1BE,KAAML,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SACrBX,GACEgB,EAAAA,EAAAA,IAAS,CACPD,KAAMA,EACNL,MAAOA,EACPC,SAAUA,KAGdG,GACD,EAKK,SAOG,gBAAGG,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAMP,SAAUK,EAAhB,UACE,UAAC,IAAD,CAAQG,QAAS,EAAGC,MAAM,aAA1B,WACE,UAAC,KAAD,CAAaT,SAAUK,EAAvB,WACE,SAAC,IAAD,CAAWK,QAAQ,OAAOC,SAAS,UAAnC,uBAGA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,OACLX,KAAK,OACLY,QAAQ,SACRJ,SAAS,eAEE,KACf,UAAC,KAAD,CAAaX,SAAUK,EAAvB,WACE,SAAC,IAAD,CAAWK,QAAQ,QAAQC,SAAS,UAApC,4BAGA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,QACLX,KAAK,QACLY,QAAQ,SACRJ,SAAS,gBAGb,UAAC,KAAD,CAAaK,YAAaV,EAAOP,UAAYQ,EAAQR,SAArD,WACA,SAAC,IAAD,CAAWW,QAAQ,WAAWC,SAAS,UAAvC,uBACE,SAAC,KAAD,CAAOC,GAAIC,EAAAA,EACXC,KAAK,WACLX,KAAK,WACLQ,SAAS,UACTM,SAAU,SAACC,GACT,GAAIA,EAAMC,QAAU,EAClB,MAAO,sCAEV,KAED,SAAC,KAAD,UAAmBb,EAAOP,eAE5B,SAAC,IAAD,CAAQe,KAAK,SAASM,YAAY,WAAWxB,EAAE,OAA/C,0BAzCL,OAiDV,E,oBCtFc,SAASyB,IACtB,IAAQC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAER,OACE,6BACE,UAACE,EAAA,EAAD,CAAQC,mBAAiB,EAAzB,WACE,qEACA,iBACEC,SAAS,WACTC,QAAQ,4CAGXL,GAAgB,mDAAkC,SAACnC,EAAD,MAGxD,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth.operations';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handlerSubmit = (values, { resetForm }) => {\n    // event.preventDefault();\n    // const form = event.currentTarget;\n    const { name, email, password } = values;\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Flex bg=\"gray.100\" justify=\"center\" pt={100} h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={500} h={380}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onSubmit={handlerSubmit}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl onSubmit={handleSubmit}>\n                  <FormLabel htmlFor=\"name\" fontSize=\"1.25rem\">\n                    Username\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    type=\"text\"\n                    name=\"name\"\n                    variant=\"filled\"\n                    fontSize=\"1.25rem\"\n                  />\n                </FormControl>{' '}\n                <FormControl onSubmit={handleSubmit}>\n                  <FormLabel htmlFor=\"email\" fontSize=\"1.25rem\">\n                    Email Address\n                  </FormLabel>\n                  <Field\n                    as={Input}\n                    type=\"email\"\n                    name=\"email\"\n                    variant=\"filled\"\n                    fontSize=\"1.25rem\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                <FormLabel htmlFor=\"password\" fontSize='1.25rem'>Password</FormLabel>\n                  <Field as={Input} \n                  type=\"password\"\n                  name=\"password\"\n                  fontSize='1.25rem'\n                  validate={(value) => {\n                    if (value.length <= 4) {\n                      return \"Password should be over 4 characters\";\n                    }\n                  }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Button type=\"submit\" colorScheme='telegram' w='full'>Register</Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  const { isLoadingAuth } = useAuth();\n\n  return (\n    <main>\n      <Helmet prioritizeSeoTags>\n        <title>Registration of a new phonebook user</title>\n        <meta\n          property=\"og:title\"\n          content=\"Registration of a new phonebook user\"\n        />\n      </Helmet>\n      {isLoadingAuth ? <div>...User Registration</div> : <RegisterForm />}\n    </main>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","bg","justify","pt","h","p","rounded","w","initialValues","email","password","onSubmit","values","resetForm","name","register","handleSubmit","errors","touched","spacing","align","htmlFor","fontSize","as","Input","type","variant","isInvalid","validate","value","length","colorScheme","Register","isLoadingAuth","useAuth","Helmet","prioritizeSeoTags","property","content"],"sourceRoot":""}